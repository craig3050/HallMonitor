#include <RF24Network.h>
#include <RF24.h>
#include <SPI.h>

//Insert Device ID##
String DeviceID = "0000001";

// nRF24L01(+) radio attached to SPI and pins 8 & 9
RF24 radio(9,10);

// Network uses that radio
RF24Network network(radio);

// Address of our node
const uint16_t this_node = 00;

// Address of the other node
const uint16_t other_node = 04;

void setup(void)
{
  Serial.begin(57600);
  Serial.println("SendRecieve");
  Serial.println("Enter text to send to other device"); 
 
  SPI.begin();
  radio.begin();
  network.begin(/*channel*/ 90, /*node address*/ this_node);
}

//RECIEVE TEXT FROM NETWORK
void ReceiveTextFromNetwork(void)
{
  // Is there anything ready for us?
  while ( network.available() )
  {
    // If so, grab it and print it out
    RF24NetworkHeader header;
    static char message[32];
    network.read(header,message,sizeof(message));
    Serial.print("Received: ");
    Serial.println(message);
    memset(message, 0, sizeof(message));
  }
}  


//READ FROM SERIAL 
void ReadFromSerial(void)
{
  // while loop for any data on serial 
  while ( Serial.available() )
    {
     String messageSend = Serial.readStringUntil('\0');
     DataWrapper(messageSend);
    }  

}  

//Takes a string and sends it on
void SendData(String self)
{
   //Convert String into Char Array for sending // 
   char outMessage[32];
   // Copy it over 
   self.toCharArray(outMessage, 32);   
  
  RF24NetworkHeader header(/*to node*/ other_node);
  bool ok = network.write(header,outMessage,strlen(outMessage));  
}

String StartMessage(String self)
{
  String spacers = "-----";
  String message = "-----";
  message += self;
  message += spacers;
  return message;
}  

void DataWrapper(String self)
{
  //Send the Device ID Code
  SendData(StartMessage(DeviceID));
  //Send data
  int selfSize = sizeof(self);
  if (selfSize < 32)
  {
   self += "                             ";
  } 
  SendData(self);
  //Send Ending message
  SendData(StartMessage("--END--"));
}
  
void loop(void)
{
// Pump the network regularly
network.update();

//See if there is anything to recieve and print to serial  
ReceiveTextFromNetwork();

//See if there is anything queueing from Serial and send
ReadFromSerial();
}
